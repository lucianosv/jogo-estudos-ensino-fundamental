
import { GameParameters } from "@/components/GameSetup";
import { getRomaQuestionByIndex } from "@/utils/expandedRomaFallbacks";

interface FallbackContent {
  story?: {
    title: string;
    content: string;
  };
  question?: {
    content: string;
    choices: string[];
    answer: string;
    word: string;
  };
  character_info?: {
    background_description: string;
    personality_traits: string[];
    special_abilities: string[];
    motivations: string[];
  };
}

// Gerar quest√µes ESPEC√çFICAS por mat√©ria, s√©rie e tema COM QUESTIONINDEX
const generateSubjectSpecificQuestion = (gameParams: GameParameters, questionIndex: number = 0): FallbackContent['question'] => {
  const { subject, schoolGrade, theme } = gameParams;
  const grade = parseInt(schoolGrade.charAt(0));

  console.log(`[INTELLIGENT-FALLBACK] Gerando quest√£o ${questionIndex} para ${subject} - ${schoolGrade} - ${theme}`);

  // HIST√ìRIA - Roma Antiga com 4 quest√µes DIFERENTES por √≠ndice
  if (subject === 'Hist√≥ria') {
    if (theme.toLowerCase().includes('roma')) {
      console.log(`[INTELLIGENT-FALLBACK] üèõÔ∏è Usando fallback espec√≠fico para Roma Antiga - Quest√£o ${questionIndex}`);
      return getRomaQuestionByIndex(schoolGrade, questionIndex);
    }
    
    if (theme.toLowerCase().includes('egito')) {
      return {
        content: `Hist√≥ria - Egito Antigo (${schoolGrade}): O que s√£o as pir√¢mides?`,
        choices: ["Casas", "T√∫mulos dos fara√≥s", "Templos", "Mercados"],
        answer: "T√∫mulos dos fara√≥s",
        word: "pir√¢mide"
      };
    }

    // Fallback gen√©rico para Hist√≥ria
    return {
      content: `Hist√≥ria - ${theme} (${schoolGrade}): Qual √© a import√¢ncia de estudar hist√≥ria?`,
      choices: ["Entender o passado", "Decorar datas", "Falar latim", "Nenhuma"],
      answer: "Entender o passado",
      word: "passado"
    };
  }

  // CI√äNCIAS
  if (subject === 'Ci√™ncias') {
    if (theme.toLowerCase().includes('solar') || theme.toLowerCase().includes('planeta')) {
      if (grade >= 1 && grade <= 3) {
        return {
          content: `Ci√™ncias - Sistema Solar (${schoolGrade}): Quantos planetas existem no Sistema Solar?`,
          choices: ["6 planetas", "7 planetas", "8 planetas", "9 planetas"],
          answer: "8 planetas",
          word: "planeta"
        };
      } else {
        return {
          content: `Ci√™ncias - Sistema Solar (${schoolGrade}): Qual √© o maior planeta do Sistema Solar?`,
          choices: ["Terra", "Marte", "J√∫piter", "Saturno"],
          answer: "J√∫piter",
          word: "gigante"
        };
      }
    }

    if (theme.toLowerCase().includes('animal')) {
      return {
        content: `Ci√™ncias - Animais (${schoolGrade}): Como os peixes respiram?`,
        choices: ["Com pulm√µes", "Com guelras", "Com pele", "Com nadadeiras"],
        answer: "Com guelras",
        word: "respira√ß√£o"
      };
    }

    return {
      content: `Ci√™ncias - ${theme} (${schoolGrade}): O que estudamos em Ci√™ncias?`,
      choices: ["Apenas plantas", "Apenas animais", "A natureza", "Apenas o corpo"],
      answer: "A natureza",
      word: "natureza"
    };
  }

  // PORTUGU√äS
  if (subject === 'Portugu√™s') {
    if (grade >= 1 && grade <= 3) {
      return {
        content: `Portugu√™s - ${theme} (${schoolGrade}): Quantas vogais tem o alfabeto?`,
        choices: ["4 vogais", "5 vogais", "6 vogais", "7 vogais"],
        answer: "5 vogais",
        word: "vogal"
      };
    } else {
      return {
        content: `Portugu√™s - ${theme} (${schoolGrade}): O que √© um substantivo?`,
        choices: ["Palavra que indica a√ß√£o", "Palavra que d√° nome", "Palavra que liga", "Palavra que descreve"],
        answer: "Palavra que d√° nome",
        word: "substantivo"
      };
    }
  }

  // GEOGRAFIA
  if (subject === 'Geografia') {
    if (theme.toLowerCase().includes('brasil')) {
      return {
        content: `Geografia - Brasil (${schoolGrade}): Qual √© a capital do Brasil?`,
        choices: ["S√£o Paulo", "Rio de Janeiro", "Bras√≠lia", "Salvador"],
        answer: "Bras√≠lia",
        word: "capital"
      };
    }

    return {
      content: `Geografia - ${theme} (${schoolGrade}): O que estudamos em Geografia?`,
      choices: ["Apenas mapas", "Lugares e pessoas", "Apenas rios", "Apenas pa√≠ses"],
      answer: "Lugares e pessoas",
      word: "lugar"
    };
  }

  // MATEM√ÅTICA - s√≥ como √∫ltimo recurso e respeitando o tema
  if (subject === 'Matem√°tica') {
    const idx = questionIndex ?? 0;
    if (grade >= 1 && grade <= 3) {
      const options = [
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Quanto √© 2 + 3?`,
          choices: ["4", "5", "6", "7"],
          answer: "5",
          word: "soma"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Se voc√™ tem 7 balas e d√° 2, com quantas fica?`,
          choices: ["3", "4", "5", "6"],
          answer: "5",
          word: "tirar"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Complete: 9 ‚àí 4 = ?`,
          choices: ["3", "4", "5", "6"],
          answer: "5",
          word: "subtra√ß√£o"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Conte: 3 + 2 = ?`,
          choices: ["4", "5", "6", "7"],
          answer: "5",
          word: "contar"
        }
      ];
      return options[idx % options.length];
    } else if (grade >= 4 && grade <= 6) {
      const options = [
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Quanto √© 6 √ó 4?`,
          choices: ["20", "22", "24", "26"],
          answer: "24",
          word: "produto"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Resolva 45 √∑ 5`,
          choices: ["7", "8", "9", "10"],
          answer: "9",
          word: "divis√£o"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): 18 + 27 = ?`,
          choices: ["43", "44", "45", "46"],
          answer: "45",
          word: "soma"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): 100 ‚àí 37 = ?`,
          choices: ["61", "62", "63", "64"],
          answer: "63",
          word: "subtra√ß√£o"
        }
      ];
      return options[idx % options.length];
    } else {
      const options = [
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Se x + 5 = 12, x = ?`,
          choices: ["5", "6", "7", "8"],
          answer: "7",
          word: "inc√≥gnita"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Resolva 3y = 21. y = ?`,
          choices: ["5", "6", "7", "8"],
          answer: "7",
          word: "vari√°vel"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): 2a ‚àí 4 = 10. a = ?`,
          choices: ["5", "6", "7", "8"],
          answer: "7",
          word: "equa√ß√£o"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Em uma express√£o, o que representa 'x'?`,
          choices: ["N√∫mero conhecido", "Opera√ß√£o", "N√∫mero desconhecido", "Fra√ß√£o"],
          answer: "N√∫mero desconhecido",
          word: "desconhecido"
        }
      ];
      return options[idx % options.length];
    }
  }

  // Fallback final respeitando a mat√©ria selecionada
  const subjectChoices = {
    'Hist√≥ria': ['Per√≠odo Colonial', 'Rep√∫blica', 'Imp√©rio', 'Era Vargas'],
    'Ci√™ncias': ['Reino Animal', 'Reino Vegetal', 'Reino Mineral', 'Reino Protista'],
    'Geografia': ['Regi√£o Norte', 'Regi√£o Sul', 'Regi√£o Nordeste', 'Regi√£o Sudeste'],
    'Portugu√™s': ['Prosa', 'Verso', 'Drama', '√âpico'],
    'Matem√°tica': ['Adi√ß√£o', 'Subtra√ß√£o', 'Multiplica√ß√£o', 'Divis√£o']
  };
  
  const choices = subjectChoices[subject as keyof typeof subjectChoices] || subjectChoices['Ci√™ncias'];
  
  return {
    content: `${subject} - ${theme} (${schoolGrade}): Quest√£o sobre ${theme} em ${subject}`,
    choices: choices,
    answer: choices[0],
    word: "conhecimento"
  };
};

// Gerar hist√≥ria espec√≠fica por mat√©ria e tema
const generateSubjectSpecificStory = (gameParams: GameParameters): FallbackContent['story'] => {
  const { subject, theme, schoolGrade } = gameParams;

  const makeAdventure = (title: string, story: string): FallbackContent['story'] => ({
    title,
    content: story
  });

  const lowerTheme = theme.toLowerCase();
  const lowerSubject = subject.toLowerCase();

  if (lowerSubject === 'hist√≥ria') {
    if (lowerTheme.includes('roma')) {
      return makeAdventure(
        'A Aventura de Marco em Roma Antiga',
        `Era uma vez um garoto romano chamado Marco que vivia nas ruas movimentadas de Roma. Uma manh√£, seu av√¥, um senador respeitado, lhe deu uma miss√£o especial.

"Marco", disse o av√¥ com um sorriso misterioso, "preciso que voc√™ descubra os segredos da nossa grande cidade. Cada lugar que visitar te ensinar√° algo importante sobre Roma."

Marco ficou animado! Primeiro, foi ao Coliseu, onde conheceu um gladiador chamado Marcus. "Aqui lutamos para entreter o povo", explicou Marcus. "O Coliseu mostra a for√ßa e o poder de Roma!"

Depois, Marco seguiu os aquedutos que traziam √°gua fresca para a cidade. Um engenheiro lhe mostrou como a √°gua viajava por quil√¥metros. "Sem √°gua limpa, Roma n√£o poderia ter tantos habitantes", disse o homem.

No f√≥rum, Marco conversou com mercadores de v√°rias terras. Eles usavam moedas romanas e seguiam as leis criadas pelo Senado. "Roma une todo o mundo conhecido", explicou um comerciante.

Ao voltar para casa, Marco estava cheio de orgulho. Agora entendia que Roma era especial porque cuidava do seu povo, constru√≠a coisas incr√≠veis e criava leis justas para todos.`
      );
    }

    return makeAdventure(
      `Aventura no Tempo: ${theme}`,
      `Era uma vez uma menina chamada Clara que encontrou um rel√≥gio m√°gico no s√≥t√£o da vov√≥. Quando o tocou, uma luz dourada a envolveu e ela viajou para uma √©poca muito antiga!

"Onde estou?", perguntou Clara, olhando ao redor com curiosidade. As pessoas usavam roupas diferentes e viviam de forma muito especial.

Uma crian√ßa da sua idade se aproximou. "Bem-vinda ao passado! Sou Jo√£o e vou te mostrar como era nossa vida."

Clara descobriu como as pessoas daquela √©poca faziam suas casas, que comidas tinham, como se vestiam e que trabalhos faziam. Cada descoberta era mais interessante que a anterior!

Ela viu como as pessoas eram corajosas e inteligentes, criando solu√ß√µes incr√≠veis para seus problemas do dia a dia. Participou de uma festa tradicional e aprendeu m√∫sicas e dan√ßas antigas.

Quando o rel√≥gio brilhou novamente, Clara estava de volta ao presente. Mas agora sabia que o passado estava cheio de pessoas especiais que constru√≠ram o mundo que conhecemos hoje. Cada √©poca tinha suas pr√≥prias aventuras e her√≥is!`
    );
  }

  if (lowerSubject === 'ci√™ncias') {
    if (lowerTheme.includes('sistema solar') || lowerTheme.includes('solar') || lowerTheme.includes('planeta')) {
      return makeAdventure(
        'A Aventura de Luna no Sistema Solar',
        `Era uma vez uma menina chamada Luna que sonhava em conhecer o espa√ßo. Uma noite, enquanto observava as estrelas, um pequeno rob√¥ chamado Astro apareceu em seu quintal!

"Oi Luna! Sou o rob√¥ Astro e preciso de sua ajuda para explorar os planetas do Sistema Solar", disse ele com luzes piscando.

Juntos, eles subiram numa nave espacial m√°gica. Primeiro visitaram Merc√∫rio, o planeta mais pr√≥ximo do Sol. "Nossa, que calor!", disse Luna. "√â por isso que n√£o tem vida aqui."

Depois foram a V√™nus, coberto de nuvens grossas. Em Marte, Luna ficou impressionada com as rochas vermelhas por todo lado. "Parece um deserto!", exclamou.

Quando chegaram a J√∫piter, Luna n√£o acreditou no tamanho! "√â gigante! E tem uma mancha vermelha enorme!" Saturno a deixou ainda mais encantada com seus lindos an√©is brilhantes.

Ao retornar √† Terra, Luna olhou para seu planeta azul com novo carinho. "Astro, nossa Terra √© realmente especial - tem √°gua, ar e vida!" disse ela, agora sonhando em ser uma grande exploradora espacial.`
      );
    }

    return makeAdventure(
      `A Descoberta Cient√≠fica de Ana`,
      `Era uma vez uma menina chamada Ana que adorava fazer experi√™ncias. Um dia, ela encontrou um laborat√≥rio secreto no por√£o de sua escola!

"Bem-vinda, jovem cientista!", disse uma voz misteriosa. Era o Professor S√°bio, um cientista muito antigo. "Voc√™ pode me ajudar a desvendar os mist√©rios da natureza?"

Ana ficou super animada! O professor lhe deu um jaleco pequeno e √≥culos de prote√ß√£o. Juntos, eles come√ßaram a observar diferentes fen√¥menos naturais.

Primeiro, Ana aprendeu sobre os animais - como respiram, onde vivem, o que comem. Depois descobriu as plantas - como crescem, por que precisam de luz solar, como fazem seu pr√≥prio alimento.

Quando estudaram o corpo humano, Ana ficou impressionada! "Professor, nosso cora√ß√£o bate o dia todo sem parar!", disse ela maravilhada.

No final do dia, Ana estava radiante. "Ci√™ncia √© incr√≠vel! Tudo na natureza tem um prop√≥sito especial", disse ela, decidindo que queria ser cientista para sempre.`
    );
  }

  if (lowerSubject === 'geografia') {
    return makeAdventure(
      `A Grande Viagem de Carlos pelo Brasil`,
      `Era uma vez um menino chamado Carlos que ganhou um mapa m√°gico do seu av√¥. O mapa mostrava todos os lugares incr√≠veis do Brasil!

"Carlos", disse o av√¥ com um sorriso, "este mapa vai te levar numa aventura por todo nosso pa√≠s. Voc√™ vai conhecer lugares que nem imagina!"

Carlos tocou o mapa e, como num passe de m√°gica, se viu voando pelo Brasil! Primeiro, sobrevoou as montanhas do Sudeste - que altas! Depois viu as praias lindas do Nordeste, com √°guas azuis cristalinas.

No Norte, Carlos ficou impressionado com a floresta amaz√¥nica. "√â gigante! E cheia de animais diferentes!", exclamou. No Sul, viu planta√ß√µes enormes e pessoas trabalhando no campo.

O menino descobriu rios gigantes como o Amazonas, montanhas alt√≠ssimas e cidades movimentadas como S√£o Paulo e Rio de Janeiro. Em Bras√≠lia, viu a capital com seus pr√©dios modernos.

Quando voltou para casa, Carlos estava cheio de orgulho do seu pa√≠s. "Vov√¥, o Brasil √© imenso e cheio de lugares diferentes e especiais!", disse ele, prometendo visitar todos um dia.`
    );
  }

  if (lowerSubject === 'portugu√™s' || lowerSubject === 'portugues') {
    return makeAdventure(
      `Maria e a Biblioteca M√°gica das Palavras`,
      `Era uma vez uma menina chamada Maria que adorava ler e escrever. Um dia, ela descobriu uma biblioteca muito especial onde as palavras saltavam dos livros!

"Ol√°, Maria!", disse uma voz melodiosa. Era a Fada das Palavras, guardi√£o da biblioteca. "Quer aprender os segredos da l√≠ngua portuguesa comigo?"

Maria ficou encantada! A fada lhe mostrou como as palavras tinham diferentes fam√≠lias: os substantivos que davam nomes √†s coisas, os verbos que mostravam a√ß√µes, e os adjetivos que descreviam tudo.

"Veja s√≥!", disse a fada, fazendo as vogais dan√ßarem no ar: "A, E, I, O, U! Elas s√£o as estrelas do alfabeto!" Maria riu vendo as letrinhas coloridas voando ao redor.

A fada ensinou Maria sobre frases bonitas, hist√≥rias emocionantes e poemas rimados. "Cada palavra tem sua magia especial", explicou.

Quando chegou a hora de ir embora, Maria estava radiante. "Fada, agora sei que as palavras s√£o como ferramentas m√°gicas para contar hist√≥rias!", disse ela, prometendo voltar sempre para aprender mais.`
    );
  }

  if (lowerSubject === 'matem√°tica' || lowerSubject === 'matematica') {
    return makeAdventure(
      `Jo√£o e o Reino dos N√∫meros`,
      `Era uma vez um menino chamado Jo√£o que pensava que matem√°tica era dif√≠cil. Mas um dia, ele encontrou uma porta secreta que o levou ao Reino dos N√∫meros!

"Bem-vindo!", disse um n√∫mero 7 saltitante. "Sou o Sete S√°bio! Aqui voc√™ vai descobrir que matem√°tica √© divertida!"

Jo√£o conheceu a fam√≠lia dos n√∫meros. Os pequeninos de 1 a 10 estavam sempre brincando de somar e subtrair. "Olha s√≥!", disse o n√∫mero 2, "quando me junto com o 3, viramos 5!"

Depois Jo√£o conheceu os n√∫meros maiores, que adoravam multiplicar e dividir. "√â como uma dan√ßa!", explicou o n√∫mero 8. "Quando dan√ßo com o 3, viramos 24!"

Jo√£o aprendeu que os n√∫meros estavam em toda parte - contando seus dedos, medindo sua altura, dividindo pizza com os amigos. "Nossa, voc√™s s√£o √∫teis mesmo!", disse ele admirado.

Quando voltou para casa, Jo√£o estava sorrindo. "Mam√£e, matem√°tica √© incr√≠vel! Os n√∫meros s√£o nossos amigos e nos ajudam todos os dias!", disse ele, agora ansioso para a aula de matem√°tica.`
    );
  }

  // Gen√©rico (qualquer mat√©ria)
  return makeAdventure(
    `A Aventura do Conhecimento`,
    `Era uma vez uma crian√ßa muito curiosa que adorava aprender coisas novas. Um dia, ela encontrou um livro m√°gico que brilhava quando tocado!

"Ol√°, pequeno explorador!", disse uma voz gentil saindo do livro. "Sou o Guardi√£o do Conhecimento. Quer descobrir segredos incr√≠veis sobre ${theme}?"

A crian√ßa aceitou na hora! O livro a levou para um mundo onde podia ver e tocar tudo que queria aprender. Era como se os conceitos ganhassem vida bem na sua frente!

Durante a aventura, ela fez descobertas surpreendentes sobre ${theme}. Cada pergunta que fazia levava a respostas ainda mais interessantes. Era como montar um quebra-cabe√ßa gigante onde cada pe√ßa revelava algo novo.

Quando a aventura terminou, a crian√ßa estava radiante de felicidade. Agora sabia que aprender era a coisa mais divertida do mundo e que sempre haveria algo novo para descobrir!

"Obrigada, Guardi√£o! Agora sei que o conhecimento √© o maior tesouro que existe!", disse ela, prometendo nunca parar de fazer perguntas e explorar o mundo.`
  );
};

// Gerar informa√ß√µes de personagem espec√≠ficas
const generateSubjectSpecificCharacterInfo = (gameParams: GameParameters): FallbackContent['character_info'] => {
  const { subject, theme, schoolGrade } = gameParams;
  
  return {
    background_description: `Ambiente educativo de ${subject} focado em ${theme} para estudantes do ${schoolGrade}`,
    personality_traits: ["Curioso sobre " + theme, "Dedicado aos estudos", "Inteligente", "Perseverante"],
    special_abilities: [`Conhecimento em ${subject}`, `Especialista em ${theme}`, "Pensamento cr√≠tico"],
    motivations: [`Dominar ${theme}`, "Superar desafios educativos", "Compartilhar conhecimento"]
  };
};

export const generateIntelligentFallback = (
  gameParams: GameParameters, 
  contentType: 'story' | 'question' | 'character_info',
  questionIndex: number = 0
): any => {
  console.log(`[INTELLIGENT-FALLBACK] Gerando ${contentType} (√≠ndice: ${questionIndex}) para ${gameParams.subject}/${gameParams.theme}/${gameParams.schoolGrade}`);
  
  switch (contentType) {
    case 'story':
      return generateSubjectSpecificStory(gameParams);
    case 'question':
      return generateSubjectSpecificQuestion(gameParams, questionIndex);
    case 'character_info':
      return generateSubjectSpecificCharacterInfo(gameParams);
    default:
      return null;
  }
};

// Fun√ß√£o para validar se o conte√∫do gerado √© adequado
export const validateGeneratedContent = (content: any, gameParams: GameParameters): boolean => {
  if (!content) return false;

  // Try to extract human-readable text
  const contentStr = JSON.stringify(content).toLowerCase();
  const text = (
    (typeof content === 'string' && content) ||
    (typeof content?.content === 'string' && content.content) ||
    contentStr
  ).toLowerCase();

  const { subject, theme } = gameParams;
  const subjectLower = subject.toLowerCase();

  // Minimal structural checks for questions
  const looksLikeQuestion = typeof (content as any)?.content === 'string';
  const hasChoices = Array.isArray((content as any)?.choices) && (content as any).choices.length === 4;
  const hasAnswer = typeof (content as any)?.answer === 'string' && (content as any).answer.length > 0;

  // If it looks like a question but lacks structure, reject
  if (looksLikeQuestion && (!hasChoices || !hasAnswer)) {
    return false;
  }

  // Subject-specific allow/deny keywords
  const mathAllow = [
    'matem√°tica','quanto √©','soma','subtra√ß√£o','multiplica√ß√£o','divis√£o','calcular','n√∫mero','resultado','opera√ß√µes','equa√ß√£o','x '
  ];
  const mathDeny = ['roma', 'hist√≥ria', 'fara√≥', 'pir√¢mide', 'planeta', 'sistema solar', 'capital', 'substantivo', 'vogal'];

  const histAllow = ['hist√≥ria','romano','roma','egito','civiliza√ß√£o','imperador','coliseu','gladiador','antigo'];
  const histDenyMathPatterns = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const sciAllow = ['ci√™ncias','planeta','sistema solar','gravidade','√≥rbita','cora√ß√£o','pulm√µes','respira√ß√£o','neur√¥nio','astronomia','animal','plantas','energia','dinossauro','dinossauros','f√≥ssil','f√≥sseis'];
  const sciDenyMath = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const geoAllow = ['geografia','mapa','capital','pa√≠s','continente','coordenada','latitude','longitude','rio','montanha','clima'];
  const geoDenyMath = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const porAllow = ['portugu√™s','gram√°tica','substantivo','verbo','vogal','consoante','texto','s√≠laba','ortografia'];
  const porDenyMath = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const includesAny = (arr: string[]) => arr.some(k => text.includes(k));
  const matchesAny = (arr: RegExp[]) => arr.some(rx => rx.test(text));

  if (subjectLower === 'matem√°tica') {
    if (mathDeny.some(k => text.includes(k))) return false;
    if (!includesAny(mathAllow)) return false;
  } else if (subjectLower === 'hist√≥ria') {
    if (matchesAny(histDenyMathPatterns)) return false;
    if (!includesAny(histAllow)) return false;
  } else if (subjectLower === 'ci√™ncias') {
    if (matchesAny(sciDenyMath)) return false;
    if (!includesAny(sciAllow)) return false;
  } else if (subjectLower === 'geografia') {
    if (matchesAny(geoDenyMath)) return false;
    if (!includesAny(geoAllow)) return false;
  } else if (subjectLower === 'portugu√™s' || subjectLower === 'portugues') {
    if (matchesAny(porDenyMath)) return false;
    if (!includesAny(porAllow)) return false;
  }

  return true;
};

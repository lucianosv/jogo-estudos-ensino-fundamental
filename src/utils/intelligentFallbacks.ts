
import { GameParameters } from "@/components/GameSetup";
import { getRomaQuestionByIndex } from "@/utils/expandedRomaFallbacks";

interface FallbackContent {
  story?: {
    title: string;
    content: string;
  };
  question?: {
    content: string;
    choices: string[];
    answer: string;
    word: string;
  };
  character_info?: {
    background_description: string;
    personality_traits: string[];
    special_abilities: string[];
    motivations: string[];
  };
}

// Gerar quest√µes ESPEC√çFICAS por mat√©ria, s√©rie e tema COM QUESTIONINDEX
const generateSubjectSpecificQuestion = (gameParams: GameParameters, questionIndex: number = 0): FallbackContent['question'] => {
  const { subject, schoolGrade, theme } = gameParams;
  const grade = parseInt(schoolGrade.charAt(0));

  console.log(`[INTELLIGENT-FALLBACK] Gerando quest√£o ${questionIndex} para ${subject} - ${schoolGrade} - ${theme}`);

  // HIST√ìRIA - Roma Antiga com 4 quest√µes DIFERENTES por √≠ndice
  if (subject === 'Hist√≥ria') {
    if (theme.toLowerCase().includes('roma')) {
      console.log(`[INTELLIGENT-FALLBACK] üèõÔ∏è Usando fallback espec√≠fico para Roma Antiga - Quest√£o ${questionIndex}`);
      return getRomaQuestionByIndex(schoolGrade, questionIndex);
    }
    
    if (theme.toLowerCase().includes('egito')) {
      return {
        content: `Hist√≥ria - Egito Antigo (${schoolGrade}): O que s√£o as pir√¢mides?`,
        choices: ["Casas", "T√∫mulos dos fara√≥s", "Templos", "Mercados"],
        answer: "T√∫mulos dos fara√≥s",
        word: "pir√¢mide"
      };
    }

    // Fallback gen√©rico para Hist√≥ria
    return {
      content: `Hist√≥ria - ${theme} (${schoolGrade}): Qual √© a import√¢ncia de estudar hist√≥ria?`,
      choices: ["Entender o passado", "Decorar datas", "Falar latim", "Nenhuma"],
      answer: "Entender o passado",
      word: "passado"
    };
  }

  // CI√äNCIAS
  if (subject === 'Ci√™ncias') {
    if (theme.toLowerCase().includes('solar') || theme.toLowerCase().includes('planeta')) {
      if (grade >= 1 && grade <= 3) {
        return {
          content: `Ci√™ncias - Sistema Solar (${schoolGrade}): Quantos planetas existem no Sistema Solar?`,
          choices: ["6 planetas", "7 planetas", "8 planetas", "9 planetas"],
          answer: "8 planetas",
          word: "planeta"
        };
      } else {
        return {
          content: `Ci√™ncias - Sistema Solar (${schoolGrade}): Qual √© o maior planeta do Sistema Solar?`,
          choices: ["Terra", "Marte", "J√∫piter", "Saturno"],
          answer: "J√∫piter",
          word: "gigante"
        };
      }
    }

    if (theme.toLowerCase().includes('animal')) {
      return {
        content: `Ci√™ncias - Animais (${schoolGrade}): Como os peixes respiram?`,
        choices: ["Com pulm√µes", "Com guelras", "Com pele", "Com nadadeiras"],
        answer: "Com guelras",
        word: "respira√ß√£o"
      };
    }

    return {
      content: `Ci√™ncias - ${theme} (${schoolGrade}): O que estudamos em Ci√™ncias?`,
      choices: ["Apenas plantas", "Apenas animais", "A natureza", "Apenas o corpo"],
      answer: "A natureza",
      word: "natureza"
    };
  }

  // PORTUGU√äS
  if (subject === 'Portugu√™s') {
    if (grade >= 1 && grade <= 3) {
      return {
        content: `Portugu√™s - ${theme} (${schoolGrade}): Quantas vogais tem o alfabeto?`,
        choices: ["4 vogais", "5 vogais", "6 vogais", "7 vogais"],
        answer: "5 vogais",
        word: "vogal"
      };
    } else {
      return {
        content: `Portugu√™s - ${theme} (${schoolGrade}): O que √© um substantivo?`,
        choices: ["Palavra que indica a√ß√£o", "Palavra que d√° nome", "Palavra que liga", "Palavra que descreve"],
        answer: "Palavra que d√° nome",
        word: "substantivo"
      };
    }
  }

  // GEOGRAFIA
  if (subject === 'Geografia') {
    if (theme.toLowerCase().includes('brasil')) {
      return {
        content: `Geografia - Brasil (${schoolGrade}): Qual √© a capital do Brasil?`,
        choices: ["S√£o Paulo", "Rio de Janeiro", "Bras√≠lia", "Salvador"],
        answer: "Bras√≠lia",
        word: "capital"
      };
    }

    return {
      content: `Geografia - ${theme} (${schoolGrade}): O que estudamos em Geografia?`,
      choices: ["Apenas mapas", "Lugares e pessoas", "Apenas rios", "Apenas pa√≠ses"],
      answer: "Lugares e pessoas",
      word: "lugar"
    };
  }

  // MATEM√ÅTICA - s√≥ como √∫ltimo recurso e respeitando o tema
  if (subject === 'Matem√°tica') {
    const idx = questionIndex ?? 0;
    if (grade >= 1 && grade <= 3) {
      const options = [
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Quanto √© 2 + 3?`,
          choices: ["4", "5", "6", "7"],
          answer: "5",
          word: "soma"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Se voc√™ tem 7 balas e d√° 2, com quantas fica?`,
          choices: ["3", "4", "5", "6"],
          answer: "5",
          word: "tirar"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Complete: 9 ‚àí 4 = ?`,
          choices: ["3", "4", "5", "6"],
          answer: "5",
          word: "subtra√ß√£o"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Conte: 3 + 2 = ?`,
          choices: ["4", "5", "6", "7"],
          answer: "5",
          word: "contar"
        }
      ];
      return options[idx % options.length];
    } else if (grade >= 4 && grade <= 6) {
      const options = [
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Quanto √© 6 √ó 4?`,
          choices: ["20", "22", "24", "26"],
          answer: "24",
          word: "produto"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Resolva 45 √∑ 5`,
          choices: ["7", "8", "9", "10"],
          answer: "9",
          word: "divis√£o"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): 18 + 27 = ?`,
          choices: ["43", "44", "45", "46"],
          answer: "45",
          word: "soma"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): 100 ‚àí 37 = ?`,
          choices: ["61", "62", "63", "64"],
          answer: "63",
          word: "subtra√ß√£o"
        }
      ];
      return options[idx % options.length];
    } else {
      const options = [
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Se x + 5 = 12, x = ?`,
          choices: ["5", "6", "7", "8"],
          answer: "7",
          word: "inc√≥gnita"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Resolva 3y = 21. y = ?`,
          choices: ["5", "6", "7", "8"],
          answer: "7",
          word: "vari√°vel"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): 2a ‚àí 4 = 10. a = ?`,
          choices: ["5", "6", "7", "8"],
          answer: "7",
          word: "equa√ß√£o"
        },
        {
          content: `Matem√°tica - ${theme} (${schoolGrade}): Em uma express√£o, o que representa 'x'?`,
          choices: ["N√∫mero conhecido", "Opera√ß√£o", "N√∫mero desconhecido", "Fra√ß√£o"],
          answer: "N√∫mero desconhecido",
          word: "desconhecido"
        }
      ];
      return options[idx % options.length];
    }
  }

  // Fallback final respeitando a mat√©ria selecionada
  return {
    content: `${subject} - ${theme} (${schoolGrade}): Quest√£o sobre ${theme} em ${subject}`,
    choices: ["Op√ß√£o A", "Op√ß√£o B", "Op√ß√£o C", "Op√ß√£o D"],
    answer: "Op√ß√£o A",
    word: "conhecimento"
  };
};

// Gerar hist√≥ria espec√≠fica por mat√©ria e tema
const generateSubjectSpecificStory = (gameParams: GameParameters): FallbackContent['story'] => {
  const { subject, theme, schoolGrade } = gameParams;

  const makeAdventure = (title: string, hook: string, beats: string[]): FallbackContent['story'] => ({
    title,
    content: [
      `Voc√™ est√° prestes a come√ßar uma miss√£o em ${subject.toLowerCase()}!`,
      hook,
      '',
      `Sua aventura:`,
      ...beats.map((b, i) => `${i + 1}. ${b}`),
      '',
      'Complete os desafios, colete as palavras secretas e desbloqueie o final desta miss√£o!',
    ].join('\n')
  });

  const lowerTheme = theme.toLowerCase();
  const lowerSubject = subject.toLowerCase();

  if (lowerSubject === 'hist√≥ria') {
    if (lowerTheme.includes('roma')) {
      return makeAdventure(
        'Jornada Hist√≥rica: Segredos de Roma Antiga',
        'Voc√™ viaja no tempo para Roma Antiga. Nas ruas movimentadas, sente o cheiro de p√£o rec√©m-assado e ouve o som distante de um gladiador treinando. Uma pergamina misteriosa revela uma miss√£o: encontrar tr√™s pistas escondidas pela cidade para decifrar um segredo do Senado.',
        [
          'Investigue o Coliseu para entender por que ele era t√£o importante para os romanos.',
          'Descubra o caminho da √°gua nos aquedutos e como Roma se mantinha abastecida.',
          'Converse com um mercador no f√≥rum e aprenda sobre as leis e moedas romanas.',
          'Retorne ao Senado para decifrar a mensagem final com seu novo conhecimento.'
        ]
      );
    }

    return makeAdventure(
      `Jornada Hist√≥rica: ${theme}`,
      `Voc√™ acorda em uma √©poca distante e precisa registrar os fatos mais importantes sobre ${theme.toLowerCase()}. Um historiador te presenteia com um caderno e uma dica: cada resposta correta revela uma nova pista sobre o passado.`,
      [
        'Localize os personagens-chave e entenda suas motiva√ß√µes.',
        'Visite um local hist√≥rico e identifique seus s√≠mbolos e seu prop√≥sito.',
        'Colete informa√ß√µes sobre cultura, economia e sociedade da √©poca.',
        'Monte a linha do tempo e apresente sua conclus√£o hist√≥rica.'
      ]
    );
  }

  if (lowerSubject === 'ci√™ncias') {
    if (lowerTheme.includes('sistema solar') || lowerTheme.includes('solar') || lowerTheme.includes('planeta')) {
      return makeAdventure(
        'Expedi√ß√£o Cient√≠fica: A Miss√£o do Sistema Solar',
        'Voc√™ entra a bordo da nave Argos-6. Seu objetivo √© visitar mundos diferentes para coletar dados essenciais. Cada acerto energiza os motores; cada erro exige recalibrar os instrumentos.',
        [
          'Estabele√ßa √≥rbita ao redor de um planeta gasoso e identifique suas camadas.',
          'Pouse em uma lua gelada e descubra pistas sobre a presen√ßa de √°gua.',
          'Analise a gravidade de um planeta rochoso e registre o dia e a noite.',
          'Retorne √† base com um relat√≥rio que explique por que cada mundo √© √∫nico.'
        ]
      );
    }

    return makeAdventure(
      `Miss√£o Cient√≠fica: ${theme}`,
      `Voc√™ recebeu um crach√° de pesquisador e um laborat√≥rio port√°til. Seu time precisa desvendar um mist√©rio de ${theme.toLowerCase()}. Cada hip√≥tese correta libera um novo equipamento para a investiga√ß√£o.`,
      [
        'Observe o fen√¥meno e descreva o que consegue medir (tempo, massa, temperatura).',
        'Forme hip√≥teses e compare com conhecimentos anteriores.',
        'Realize um experimento mental ou pr√°tico para testar suas ideias.',
        'Explique a conclus√£o usando termos cient√≠ficos do seu ano escolar.'
      ]
    );
  }

  if (lowerSubject === 'geografia') {
    return makeAdventure(
      `Rota Geogr√°fica: ${theme}`,
      `Voc√™ abre um mapa com coordenadas enigm√°ticas. Sua miss√£o √© tra√ßar uma rota segura e entender as paisagens de ${theme.toLowerCase()}. Cada acerto revela um novo ponto no mapa.`,
      [
        'Identifique o tipo de relevo dominante e seu impacto nas pessoas.',
        'Reconhe√ßa o clima e explique como ele influencia a vegeta√ß√£o e a vida local.',
        'Localize recursos h√≠dricos e avalie sua import√¢ncia para a regi√£o.',
        'Descreva como as pessoas vivem e trabalham nesse espa√ßo geogr√°fico.'
      ]
    );
  }

  if (lowerSubject === 'portugu√™s' || lowerSubject === 'portugues') {
    return makeAdventure(
      `Aventura das Palavras: ${theme}`,
      `Voc√™ entra na Biblioteca Encantada, onde as palavras ganham vida. O Guardi√£o dos Textos te desafia a decifrar segredos lingu√≠sticos sobre ${theme.toLowerCase()}.`,
      [
        'Classifique corretamente termos e identifique a fun√ß√£o de cada um na frase.',
        'Reescreva um enigma substituindo palavras por sin√¥nimos adequados.',
        'Corrija um texto curto mantendo coes√£o e coer√™ncia.',
        'Crie um mini-par√°grafo aplicando as regras estudadas.'
      ]
    );
  }

  if (lowerSubject === 'matem√°tica' || lowerSubject === 'matematica') {
    return makeAdventure(
      `Desafio Matem√°tico: ${theme}`,
      `O Mestre dos N√∫meros prop√µe uma trilha de desafios sobre ${theme.toLowerCase()}. A cada acerto, uma nova parte do mapa √© revelada at√© voc√™ encontrar o tesouro l√≥gico.`,
      [
        'Resolva um problema simples para destrancar o primeiro cadeado.',
        'Analise um padr√£o e explique a regra que o governa.',
        'Escolha a opera√ß√£o correta para um problema de situa√ß√£o real.',
        'Apresente a resposta final justificando cada etapa do racioc√≠nio.'
      ]
    );
  }

  // Gen√©rico (qualquer mat√©ria)
  return makeAdventure(
    `${subject}: A Miss√£o de ${theme}`,
    `Voc√™ recebe um convite misterioso: concluir uma miss√£o sobre ${theme.toLowerCase()} no ${schoolGrade}. Cada pista correta revela a pr√≥xima parte da hist√≥ria.`,
    [
      'Descubra os conceitos fundamentais ligados ao tema.',
      'Conecte o tema com exemplos do dia a dia.',
      'Resolva um desafio aplicado para provar seu entendimento.',
      'Re√∫na tudo em uma conclus√£o que finalize a aventura.'
    ]
  );
};

// Gerar informa√ß√µes de personagem espec√≠ficas
const generateSubjectSpecificCharacterInfo = (gameParams: GameParameters): FallbackContent['character_info'] => {
  const { subject, theme, schoolGrade } = gameParams;
  
  return {
    background_description: `Ambiente educativo de ${subject} focado em ${theme} para estudantes do ${schoolGrade}`,
    personality_traits: ["Curioso sobre " + theme, "Dedicado aos estudos", "Inteligente", "Perseverante"],
    special_abilities: [`Conhecimento em ${subject}`, `Especialista em ${theme}`, "Pensamento cr√≠tico"],
    motivations: [`Dominar ${theme}`, "Superar desafios educativos", "Compartilhar conhecimento"]
  };
};

export const generateIntelligentFallback = (
  gameParams: GameParameters, 
  contentType: 'story' | 'question' | 'character_info',
  questionIndex: number = 0
): any => {
  console.log(`[INTELLIGENT-FALLBACK] Gerando ${contentType} (√≠ndice: ${questionIndex}) para ${gameParams.subject}/${gameParams.theme}/${gameParams.schoolGrade}`);
  
  switch (contentType) {
    case 'story':
      return generateSubjectSpecificStory(gameParams);
    case 'question':
      return generateSubjectSpecificQuestion(gameParams, questionIndex);
    case 'character_info':
      return generateSubjectSpecificCharacterInfo(gameParams);
    default:
      return null;
  }
};

// Fun√ß√£o para validar se o conte√∫do gerado √© adequado
export const validateGeneratedContent = (content: any, gameParams: GameParameters): boolean => {
  if (!content) return false;

  // Try to extract human-readable text
  const contentStr = JSON.stringify(content).toLowerCase();
  const text = (
    (typeof content === 'string' && content) ||
    (typeof content?.content === 'string' && content.content) ||
    contentStr
  ).toLowerCase();

  const { subject, theme } = gameParams;
  const subjectLower = subject.toLowerCase();

  // Minimal structural checks for questions
  const looksLikeQuestion = typeof (content as any)?.content === 'string';
  const hasChoices = Array.isArray((content as any)?.choices) && (content as any).choices.length === 4;
  const hasAnswer = typeof (content as any)?.answer === 'string' && (content as any).answer.length > 0;

  // If it looks like a question but lacks structure, reject
  if (looksLikeQuestion && (!hasChoices || !hasAnswer)) {
    return false;
  }

  // Subject-specific allow/deny keywords
  const mathAllow = [
    'matem√°tica','quanto √©','soma','subtra√ß√£o','multiplica√ß√£o','divis√£o','calcular','n√∫mero','resultado','opera√ß√µes','equa√ß√£o','x '
  ];
  const mathDeny = ['roma', 'hist√≥ria', 'fara√≥', 'pir√¢mide', 'planeta', 'sistema solar', 'capital', 'substantivo', 'vogal'];

  const histAllow = ['hist√≥ria','romano','roma','egito','civiliza√ß√£o','imperador','coliseu','gladiador','antigo'];
  const histDenyMathPatterns = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const sciAllow = ['ci√™ncias','planeta','sistema solar','gravidade','√≥rbita','cora√ß√£o','pulm√µes','respira√ß√£o','neur√¥nio','astronomia','animal','plantas','energia','dinossauro','dinossauros','f√≥ssil','f√≥sseis'];
  const sciDenyMath = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const geoAllow = ['geografia','mapa','capital','pa√≠s','continente','coordenada','latitude','longitude','rio','montanha','clima'];
  const geoDenyMath = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const porAllow = ['portugu√™s','gram√°tica','substantivo','verbo','vogal','consoante','texto','s√≠laba','ortografia'];
  const porDenyMath = [/\bquanto\s+√©\b/, /\d+\s*[+\-√óx*√∑/]\s*\d+/];

  const includesAny = (arr: string[]) => arr.some(k => text.includes(k));
  const matchesAny = (arr: RegExp[]) => arr.some(rx => rx.test(text));

  if (subjectLower === 'matem√°tica') {
    if (mathDeny.some(k => text.includes(k))) return false;
    if (!includesAny(mathAllow)) return false;
  } else if (subjectLower === 'hist√≥ria') {
    if (matchesAny(histDenyMathPatterns)) return false;
    if (!includesAny(histAllow)) return false;
  } else if (subjectLower === 'ci√™ncias') {
    if (matchesAny(sciDenyMath)) return false;
    if (!includesAny(sciAllow)) return false;
  } else if (subjectLower === 'geografia') {
    if (matchesAny(geoDenyMath)) return false;
    if (!includesAny(geoAllow)) return false;
  } else if (subjectLower === 'portugu√™s' || subjectLower === 'portugues') {
    if (matchesAny(porDenyMath)) return false;
    if (!includesAny(porAllow)) return false;
  }

  return true;
};
